{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset0 Menlo-Bold;\f2\fnil\fcharset0 Menlo-Regular;
\f3\fmodern\fcharset0 Courier;\f4\fnil\fcharset0 AndaleMono;\f5\fswiss\fcharset0 Helvetica;
\f6\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red29\green30\blue31;\red255\green255\blue255;\red22\green82\blue202;
\red0\green0\blue0;\red255\green255\blue255;\red45\green150\blue30;\red49\green139\blue238;\red185\green188\blue186;
\red0\green0\blue0;\red78\green117\blue165;\red197\green166\blue53;\red137\green154\blue45;\red251\green0\blue7;
\red136\green137\blue135;\red255\green0\blue0;\red0\green0\blue0;\red38\green38\blue38;\red242\green242\blue242;
\red46\green46\blue49;\red46\green46\blue49;\red191\green191\blue191;\red244\green0\blue95;\red11\green13\blue26;
\red88\green209\blue235;\red157\green101\blue255;\red224\green213\blue97;}
{\*\expandedcolortbl;;\cssrgb\c14902\c15686\c16471;\cssrgb\c100000\c100000\c100000;\cssrgb\c9804\c41569\c83137;
\csgray\c0;\csgray\c100000;\cssrgb\c20459\c63760\c15349;\cssrgb\c23653\c62456\c94776;\cssrgb\c77255\c78431\c77647;
\csgenericrgb\c0\c0\c0;\cssrgb\c37647\c53725\c70588;\cssrgb\c81569\c70196\c26667;\cssrgb\c60392\c65882\c22745;\cssrgb\c100000\c4314\c0;
\cssrgb\c60392\c60784\c60000;\csgenericrgb\c100000\c0\c0;\cssrgb\c0\c0\c0;\cssrgb\c20000\c20000\c20000;\cssrgb\c96078\c96078\c96078;
\cssrgb\c23922\c23529\c25098;\cssrgb\c23922\c23529\c25098\c7843;\csgray\c79525;\cssrgb\c97647\c14902\c44706;\cssrgb\c4314\c6275\c13333;
\cssrgb\c40000\c85098\c93725;\cssrgb\c68235\c50588\c100000;\cssrgb\c90196\c85882\c45490;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid101\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\margl1440\margr1440\vieww11620\viewh15460\viewkind0
\deftab720
\pard\pardeftab720\sl300\partightenfactor0

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
Python Cheat Sheet:\
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb3 -----------------------------------------\
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb3 ~ * ~ * ~ * ~ * ~ * ~ *.\'a0 \'a0 CREATING A NEW APP\
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb3 1. Go into the virtual environment ( djangoEnv/bin/activate)\
2. Create a new project\'a0 (> django-admin startproject main)\
3. Make a folder called apps => create __init__.py,\
4. > python ../manage.py startapp first_app (this will create the new app\
5. In the apps folder make sure you can use the new app.\
6. In settings.py (this file lives inside the main directory. The main directory is alongside apps and manage.py) we are going to have to add our application to the project. That means adding apps.first_app to our INSTALLED_APPS list:\
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb3 \'a0 # Inside main/settings.py\
\'a0 INSTALLED_APPS = [\
\'a0 \'a0 \'a0 'django.contrib.admin',\
\'a0 \'a0 \'a0 'django.contrib.auth',\
\'a0 \'a0 \'a0 'django.contrib.contenttypes',\
\'a0 \'a0 \'a0 'django.contrib.sessions',\
\'a0 \'a0 \'a0 'django.contrib.messages',\
\'a0 \'a0 \'a0 'django.contrib.staticfiles',\
\'a0 ]\
\'a0 # BECOMES:\
\'a0 \'a0INSTALLED_APPS = [\
\'a0 \'a0 \'a0 \'a0'apps.first_app', ### added this line!\
\'a0 \'a0 \'a0 \'a0'django.contrib.admin',\
\'a0 \'a0 \'a0 \'a0'django.contrib.auth',\
\'a0 \'a0 \'a0 \'a0'django.contrib.contenttypes',\
\'a0 \'a0 \'a0 \'a0'django.contrib.sessions',\
\'a0 \'a0 \'a0 \'a0'django.contrib.messages',\
\'a0 \'a0 \'a0 \'a0'django.contrib.staticfiles',\
\'a0 \'a0]\
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb3 7. Go to the main folder and run (python manage.py runserver) from the terminal\
8. Proceed to localhost:8000. You should see a simple page congratulating you on a Django-powered page. Stop the server now (ctrl-C) before moving on to the next step.\
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb3 -----------------------------\
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb3 ~ * ~ * ~ * ~ * ~ * ~ * SETTING UP THE\
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb3 1. Inside of main/urls.py modify this document in order to use routes from first_app\
So it looks like this:\
~~~~~~\
\'a0from django.conf.urls import url, include\'a0\
\'a0 from django.contrib import admin\
\'a0 urlpatterns = [\
\'a0 \'a0 \'a0 url(r'^', include('apps.first_app.urls'))\'a0\
\'a0 ]\
~~~~~~\
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb3 2. Make a urls.py in\'a0 /apps/first_app/ and add the following code:\
~~~~\
from django.conf.urls import url\
\'a0 from . import views\'a0 \'a0 \'a0 \'a0 \'a0 \'a0\
\'a0 urlpatterns = [\
\'a0 \'a0 url(r'^$', views.index)\'a0 \'a0\'a0\
\'a0 ]\
~~~~~\
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb3 3. Build our first views function, index\'a0\
~~~~~~~\
from django.shortcuts import render, HttpResponse, redirect\
\'a0 # the index function is called when root is visited\
\'a0 def index(request):\
\'a0 \'a0 response = "Hello, I am your first request!"\
\'a0 \'a0 return HttpResponse(response)\
~~~~~~~\
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb3 Regular Expressions:\
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb3 * '^' Matches the following characters at the beginning of a string. Example: '^a' matches 'anna' but not 'banana'.\
* '$' Matches the previous characters at the end of a string. Example: 'a$' matches 'anna' and 'banana' but not 'fan'.\
* '[]' Matches any value in a range. Example: '[0-9]' matches '9' and '9s'.\
* '\{n\}' Matches n number or more repetitions of the preceding pattern. Example: * * '[0-9]\{2\}' matches '91' and '9834' but not '9'\
* \\d Matches digits.\'a0 Example: "\\d" matches "8" and "877x"*\'a0\
* \\d+ matches a string with one or more digits\
* \\w Matches characters.\
* \\w+ matches a string with one or more character/word\
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb3 ** ALWAYS BUT BROADER EXPRESSIONS LAST AND MORE SPECIFIC ONES AT THE BEGINNING\
** ^___$ will only match with the exact pattern\'a0\
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb3 ~~~~~~~~~~~~~\
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb3 Forms and Templates:\
While adding a form to ./projectname/templates/projectname/index.html\
(Don't forget to add the new url to ./project/urls.py:_\
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb3 Key Terms\
	1. request.POST\
	Data from POST request\
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb3 	2.request.GET\
	Data from GET request\
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb3 	3.request.method\
\'a0	Returns the method/HTTP verb associated with the request\
	\
	4.\{% csrf_token %\}\
	Prevents cross-site request forgery (place it in a form on the HTML/		template side of your project)\
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb3 Session~\
In our terminal, head to the directory where manage.py resides and run the following commands:\
\'a0 > python manage.py makemigrations\
\'a0 > python manage.py migrate\
		if last line is "Applying sessions.0001_initial... OK" everything\'a0		is okay\
Now we can restart our server and use session:\
request.session\
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb3 As request.session is just a dictionary, you can attach any key/value pairs.\'a0 For example, in the views.py file, you could do:\
request.session['name'] = request.POST['name']\
request.session['counter'] = 100\
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb3 Useful session methods:\
request.session['key']\
This will retrieve (get) the value stored in key\
request.session['key'] = 'value'\
Set the value that will be stored by key\
del request.session['key']\
Deletes a session key if it exists, throws a keyError if it doesn\'92t. Use along with try and except since it\'92s better to ask for forgiveness than permission\
'key' in request.session\
Returns a boolean of whether a key is in session or not\
\{\{\'a0{\field{\*\fldinst{HYPERLINK "http://request.session.name/"}}{\fldrslt \cf4 \ul \ulc4 request.session.name}}\'a0\}\}\
Use dot notation (.) to access request.session keys from templates since square brackets ([]) aren\'92t allowed there\
\
First:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0

\f1\b\fs28 \cf5 \cb6 \kerning1\expnd0\expndtw0 \CocoaLigature0 Ashleys-MacBook-Pro:projects abloskas$ source djangoEnv/bin/activate
\f0\b0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \
HOW TO START A NEW PROJECT STEPS:\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0

\f2\fs22 \cf5 \cb6 \kerning1\expnd0\expndtw0 \CocoaLigature0 (djangoEnv) Ashleys-MacBook-Pro:django abloskas$ django-admin startproject dapp\
(djangoEnv) Ashleys-MacBook-Pro:django abloskas$ cd dapp\
(djangoEnv) Ashleys-MacBook-Pro:dapp abloskas$ pwd\
/Users/abloskas/desktop/projects/django/dapp\
(djangoEnv) Ashleys-MacBook-Pro:dapp abloskas$ mkdir apps\
(djangoEnv) Ashleys-MacBook-Pro:dapp abloskas$ cd apps\
(djangoEnv) Ashleys-MacBook-Pro:apps abloskas$ ls\
(djangoEnv) Ashleys-MacBook-Pro:apps abloskas$ pwd\
/Users/abloskas/desktop/projects/django/dapp/apps\
(djangoEnv) Ashleys-MacBook-Pro:apps abloskas$ ../manage.py startapp create\
(djangoEnv) Ashleys-MacBook-Pro:apps abloskas$ touch __init__.py\
(djangoEnv) Ashleys-MacBook-Pro:apps abloskas$ cd ..\
(djangoEnv) Ashleys-MacBook-Pro:dapp abloskas$ cd ..\
(djangoEnv) Ashleys-MacBook-Pro:django abloskas$ cd dapp\
(djangoEnv) Ashleys-MacBook-Pro:dapp abloskas$ python manage.py runserver\
\

\f1\b THEN, CREATE urls.py FOR your \'93app\'94(whatever its named) folder (in this case, inside create) within apps folder\

\f2\b0 \
\
MAKING TEMPLATES & STATIC DIRECTORIES\
\
(djangoEnv) Ashleys-MacBook-Pro:blogs abloskas$ cd apps\
(djangoEnv) Ashleys-MacBook-Pro:apps abloskas$ cd first_app\
(djangoEnv) Ashleys-MacBook-Pro:first_app abloskas$ mkdir templates\
(djangoEnv) Ashleys-MacBook-Pro:first_app abloskas$ mkdir static\
(djangoEnv) Ashleys-MacBook-Pro:first_app abloskas$ cd templates\
(djangoEnv) Ashleys-MacBook-Pro:templates abloskas$ mkdir first_app\
(djangoEnv) Ashleys-MacBook-Pro:templates abloskas$ cd first_app\
(djangoEnv) Ashleys-MacBook-Pro:first_app abloskas$ touch index.html\
(djangoEnv) Ashleys-MacBook-Pro:first_app abloskas$ cd ..\
(djangoEnv) Ashleys-MacBook-Pro:templates abloskas$ cd ..\
(djangoEnv) Ashleys-MacBook-Pro:first_app abloskas$ mkdir static\
(djangoEnv) Ashleys-MacBook-Pro:first_app abloskas$ cd static\
(djangoEnv) Ashleys-MacBook-Pro:static abloskas$ touch style.css
\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0

\b \cf2 \cb3 DONT FORGET TO ADD APP TO SETTINGS.PY\
\
DONT FORGET TO MAKEMIGRATIONS, MIGRATE!!!\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0

\f1\fs22 \cf7 \cb6 \kerning1\expnd0\expndtw0 \CocoaLigature0 from
\f2\b0 \cf5  
\f1\b \cf8 apps.likes_books.models
\f2\b0 \cf5  
\f1\b \cf7 import
\f2\b0 \cf5  *\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0

\f0\b\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\
IN FORM, HTML: 
\f2\b0\fs24 \cf9 \cb1  \cf10 \{% csrf_token %\}\
\
\pard\pardeftab720\sl360\partightenfactor0
\cf11 <head>\cf9 \
    \cf11 <meta\cf12  charset=\cf13 "utf-8"\cf11 >\cf9 \
    \cf11 <title>\cf9 Login \cf14 &\cf9  Reg | Success\cf11 </title>\cf9 \
    \{% load static %\}\
\cf15 <!-- The line above tells Django to be ready to listen for static files -->\cf9 \
    \cf11 <link\cf12  rel=\cf13 "stylesheet"\cf12  href=\cf13 "\cf10 \cb16 \{% static \'91YOURFILE/css/style.css' %\}" \cf12 \cb1 media=\cf13 "screen"\cf12  title=\cf13 "no title"\cf12   charset=\cf13 "utf-8"\cf11 >\cf9 \
\cf15 <!-- Put the static files in the static folder inside your app.  Django collects files within all static folders and puts them within a single folder -->\cf9     \
\cf11 </head>\cf9 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0
\cf9 \
\
\
\
Models: 
\f3 \cf17 def __repr__OR STR (self):\
\pard\pardeftab720\sl280\partightenfactor0
\cf17         return "<Blog object: \{\} \{\}>".format(self.name, self.desc)\
\
Deployment: \
\
\pard\pardeftab720\sl340\partightenfactor0

\f4 \cf18 \cb19 # Inside settings.py\
# modify these lines\
DEBUG = False\
ALLOWED_HOSTS = ['\{\{yourEC2.public.ip\}\}']\
# add the line below to the bottom of the file\
STATIC_ROOT = os.path.join(BASE_DIR, "static/")\
\pard\pardeftab720\sl280\partightenfactor0

\f3 \cf17 \cb1 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0

\f2\fs22 \cf5 \cb6 \kerning1\expnd0\expndtw0 \CocoaLigature0 (djangoEnv) Ashleys-MacBook-Pro:login_registration_proj abloskas$ git remote rm origin\
(djangoEnv) Ashleys-MacBook-Pro:login_registration_proj abloskas$ git remote add origin https://github.com/abloskas/DjangoLoginMarch.git\
(djangoEnv) Ashleys-MacBook-Pro:login_registration_proj abloskas$ git push -u origin master
\f3\fs24 \cf17 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0

\f0\fs26 \cf2 \cb3 \
\

\itap1\trowd \taflags4 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil \trpadl100 \trpadr100 
\clvertalt \clshdrawnil \clwWidth23620\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl432\partightenfactor0

\f5\fs27 \cf20 \cb21 Instructions for updating your repo with your Belt Exam on your deployed project:\cb1 \
\pard\intbl\itap1\tx220\tx720\pardeftab720\li720\fi-720\sl320\partightenfactor0
\ls1\ilvl0\cf20 \cb21 \kerning1\expnd0\expndtw0 {\listtext	1.	}\expnd0\expndtw0\kerning0
Using your existing login/reg on your local machine, add the functionality of the belt exam.\cb1 \
\ls1\ilvl0\cb21 \kerning1\expnd0\expndtw0 {\listtext	2.	}\expnd0\expndtw0\kerning0
Make the changes that you made on your settings.py file on the AWS server, to your local settings.py file....(debug=False, public ip, static_root....)\cb1 \
\ls1\ilvl0\cb21 \kerning1\expnd0\expndtw0 {\listtext	3.	}\expnd0\expndtw0\kerning0
git add. -> git commit -> git push ----your repo\cb1 \
\ls1\ilvl0\cb21 \kerning1\expnd0\expndtw0 {\listtext	4.	}\expnd0\expndtw0\kerning0
Connect to your AWS Ubuntu server\cb1 \
\ls1\ilvl0\cb21 \kerning1\expnd0\expndtw0 {\listtext	5.	}\expnd0\expndtw0\kerning0
in the deployed repo folder enter the following commands git fetch --all git reset --hard origin/master\cb1 \cell \lastrow\row

\itap1\trowd \taflags4 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil \trpadl100 \trpadr100 
\clvertalt \clshdrawnil \clwWidth1060\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr200 \gaph\cellx4320
\clvertalc \clshdrawnil \clbrdrt\brdrs\brdrw20\brdrcf22 \clbrdrl\brdrs\brdrw20\brdrcf22 \clbrdrb\brdrs\brdrw20\brdrcf22 \clbrdrr\brdrs\brdrw20\brdrcf22 \clpadl100 \clpadr100 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl320\qr\partightenfactor0

\fs28 \cf20 \cell 
\pard\intbl\itap1\pardeftab720\sl400\qr\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://dojo.news/coding-dojo/pl/hqrrz6tufjgo7qgjy4azt986zw"}}{\fldrslt 
\fs22 \cf20 \cb3 3:36 PM\cb1 \
}}\pard\intbl\itap1\tx220\tx720\pardeftab720\li720\fi-720\sl320\partightenfactor0
\ls2\ilvl0
\fs27 \cf20 \cb3 sudo service gunicorn restart\cb1 \cell \lastrow\row

\itap1\trowd \taflags4 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil \trpadl100 \trpadr100 
\clvertalt \clshdrawnil \clwWidth1060\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr200 \gaph\cellx4320
\clvertalc \clshdrawnil \clbrdrt\brdrs\brdrw20\brdrcf22 \clbrdrl\brdrs\brdrw20\brdrcf22 \clbrdrb\brdrs\brdrw20\brdrcf22 \clbrdrr\brdrs\brdrw20\brdrcf22 \clpadl100 \clpadr100 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl320\qr\partightenfactor0

\fs28 \cf20 \cell 
\pard\intbl\itap1\pardeftab720\sl400\qr\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://dojo.news/coding-dojo/pl/aag4yiycfffhbeb7xwxz6gbpgc"}}{\fldrslt 
\fs22 \cf20 \cb3 3:38 PM\cb1 \
}}\pard\intbl\itap1\pardeftab720\sl432\partightenfactor0

\fs27 \cf20 \cb3 edit * Step 5. those are two commands, "git fetch --all" and "git reset --hard origin/master"\

\fs33 =
\fs27 \
For many-to-many views:\
\
\pard\intbl\itap1\pardeftab720\sl340\partightenfactor0

\f6\fs25\fsmilli12600 \cf23 \cb24 class\cf3  \cf25 Book\cf3 (models.Model):\
	title \cf23 =\cf3  models.CharField(max_length\cf23 =\cf26 255\cf3 )\
	created_at \cf23 =\cf3  models.DateTimeField(auto_now_add\cf23 =\cf26 True\cf3 )\
	updated_at \cf23 =\cf3  models.DateTimeField(auto_now\cf23 =\cf26 True\cf3 )\
\cf23 class\cf3  \cf25 Publisher\cf3 (models.Model):\
	name \cf23 =\cf3  models.CharField(max_length\cf23 =\cf26 255\cf3 )\
	books \cf23 =\cf3  models.ManyToManyField(Book, related_name\cf23 =\cf27 "publishers"\cf3 )\
	created_at \cf23 =\cf3  models.DateTimeField(auto_now_add\cf23 =\cf26 True\cf3 )\
	updated_at \cf23 =\cf3  models.DateTimeField(auto_now\cf23 =\cf26 True\cf3 )\
\pard\intbl\itap1\pardeftab720\sl432\partightenfactor0

\f5\fs27 \cf20 \cb3 \
\
\pard\intbl\itap1\pardeftab720\sl340\partightenfactor0

\f6\fs25\fsmilli12600 \cf3 \cb24 this_book \cf23 =\cf3  Book.\cf25 object\cf3 s.\cf25 get\cf3 (id\cf23 =\cf26 4\cf3 )\
this_publisher \cf23 =\cf3  Publisher.\cf25 object\cf3 s.\cf25 get\cf3 (id\cf23 =\cf26 2\cf3 )\
this_publisher.books.\cf25 add\cf3 (this_book)\
\pard\intbl\itap1\pardeftab720\sl432\partightenfactor0

\f5\fs27 \cf20 \cb1 \cell \lastrow\row
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0

\f0\fs26 \cf2 \cb3 \
}